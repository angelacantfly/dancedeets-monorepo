vm: true
runtime: custom
threadsafe: true
api_version: 1
service: default

manual_scaling:
  instances: 3

#TODO: re-enable this when we figure out a way to replace 'login: admin' functionality
#env: flex
#beta_settings:
#  enable_app_engine_apis: true
#
#resources:
#  memory_gb: 2.0
#  cpu: 1.0
vm_settings:
  machine_type: n1-standard-1


#  has_docker_image: 'True'

#automatic_scaling:
#  max_idle_instances: 1
#  max_pending_latency: 500ms

#automatic_scaling:
#  min_num_instances: 1
#  max_num_instances: 5
#  cool_down_period_sec: 60
#  cpu_utilization:
#    target_utilization: 0.5

inbound_services:
- warmup

default_expiration: 10d
handlers:
# Unused graphql:
- url: /graphql.*
  script: graphql_server.app
- url: /graphiql.*
  script: graphql_server.app
- url: /static/graphql.*
  script: graphql_server.app
# Builtin
- url: /_ah/queue/deferred
  script: admin_apps.authorized_deferred_app
# Mapreduce/Pipeline:
- url: /_pipeline(/.*)?
  script: admin_apps.authorized_pipeline_app
- url: /mapreduce/worker_callback.*
  script: admin_apps.authorized_main_app
- url: /mapreduce(/.*)?
  script: admin_apps.authorized_mapreduce_app
# My Admin Tools
- url: /tools/.*
  script: admin_apps.authorized_main_app
- url: /admin.*
  script: admin_apps.authorized_admin_app
- url: /events/admin.*
  script: admin_apps.authorized_main_app
- url: /tasks/.*
  script: admin_apps.authorized_main_app
- url: /_ah/warmup
  script: main.application
- url: .*
  script: main.application

skip_files:
# This is here so that the GAE dev_appserver's mtime_watcher will ignore this directory
# and therefore not complain about 'too many files'. It's different from the other lines,
# which are intended to keep files from getting pushed to the GAE server.
- .*node_modules
